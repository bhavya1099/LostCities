// Test generated by RoostGPT for test java-unit-test-bhavya using AI Type Open AI and AI Model gpt-4

package com.lostcities.lostcities.domain.game;

import com.lostcities.lostcities.domain.game.card.Card;
import com.lostcities.lostcities.domain.game.card.Deck;
import com.lostcities.lostcities.domain.game.exception.EmptyDeckException;
import com.lostcities.lostcities.domain.game.exception.GameNotStartedException;
import com.lostcities.lostcities.domain.game.exception.IllegalMoveException;
import com.lostcities.lostcities.domain.game.exception.NotPlayersTurnException;
import com.lostcities.lostcities.domain.user.User;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.*;

public class Game_makeMove_625c30ba08_Test {

    @Mock
    private Move move;

    @Mock
    private List<Move> moves;

    @InjectMocks
    private Game game;

    @BeforeEach
    public void init() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testMakeMove() {
        when(moves.size()).thenReturn(1);
        when(moves.get(anyInt())).thenReturn(move);
        doNothing().when(move).setGame(game);
        game.makeMove(move);
        verify(move, times(1)).setGame(game);
        verify(moves, times(1)).add(move);
    }

    @Test
    public void testMakeMoveWhenMovesIsEmpty() {
        when(moves.size()).thenReturn(0);
        doNothing().when(move).setGame(game);
        game.makeMove(move);
        verify(move, times(1)).setGame(game);
        verify(moves, times(1)).add(move);
    }
}
