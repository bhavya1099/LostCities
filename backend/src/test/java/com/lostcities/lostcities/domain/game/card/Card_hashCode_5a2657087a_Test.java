// Test generated by RoostGPT for test java-unit-test-bhavya using AI Type Open AI and AI Model gpt-4

package com.lostcities.lostcities.domain.game.card;

import com.fasterxml.jackson.annotation.JsonIgnore;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import java.util.Objects;
import static org.junit.jupiter.api.Assertions.assertEquals;

@SpringBootTest
public class Card_hashCode_5a2657087a_Test {

    private Card card1, card2, card3;

    @BeforeEach
    public void setUp() {
        card1 = new Card();
        card1.setColor("Blue");
        card1.setValue(10);
        card1.setInstance(1);

        card2 = new Card();
        card2.setColor("Blue");
        card2.setValue(10);
        card2.setInstance(1);

        card3 = new Card();
        card3.setColor("Red");
        card3.setValue(5);
        card3.setInstance(2);
    }

    @Test
    public void testHashCode() {
        int expectedHash1 = Objects.hash(card1.getColor(), card1.getValue(), card1.getInstance());
        assertEquals(expectedHash1, card1.hashCode(), "Hash codes should be equal for identical card properties");

        int expectedHash2 = Objects.hash(card2.getColor(), card2.getValue(), card2.getInstance());
        assertEquals(expectedHash2, card2.hashCode(), "Hash codes should be equal for identical card properties");

        assertEquals(card1.hashCode(), card2.hashCode(), "Hash codes of two cards with same properties should be equal");

        int expectedHash3 = Objects.hash(card3.getColor(), card3.getValue(), card3.getInstance());
        assertEquals(expectedHash3, card3.hashCode(), "Hash codes should be equal for identical card properties");

        assertNotEquals(card1.hashCode(), card3.hashCode(), "Hash codes of two cards with different properties should not be equal");
    }
}
