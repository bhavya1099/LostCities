// Test generated by RoostGPT for test java-unit-test-bhavya using AI Type Open AI and AI Model gpt-4

package com.lostcities.lostcities.domain.game;

import com.lostcities.lostcities.domain.game.card.Card;
import com.lostcities.lostcities.domain.game.card.CardStack;
import com.lostcities.lostcities.domain.game.card.Color;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

import java.util.HashMap;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

public class GameBoard_GameBoard_3f4c0b2e4c_Test {

    private Map<Color, CardStack> discardStacks;

    @BeforeEach
    public void setup() {
        discardStacks = new HashMap<>();
        CardStack mockCardStack = Mockito.mock(CardStack.class);
        discardStacks.put(Color.RED, mockCardStack);
        discardStacks.put(Color.BLUE, mockCardStack);
        discardStacks.put(Color.GREEN, mockCardStack);
        discardStacks.put(Color.WHITE, mockCardStack);
        discardStacks.put(Color.YELLOW, mockCardStack);
    }

    @Test
    public void testGameBoardConstructorWithValidInput() {
        GameBoard gameBoard = new GameBoard(discardStacks);
        assertNotNull(gameBoard);
        assertEquals(discardStacks, gameBoard.getDiscardStacks());
    }

    @Test
    public void testGameBoardConstructorWithNullInput() {
        GameBoard gameBoard = new GameBoard(null);
        assertNotNull(gameBoard);
        assertNotNull(gameBoard.getDiscardStacks());
        assertEquals(0, gameBoard.getDiscardStacks().size());
    }
}
