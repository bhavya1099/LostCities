// Test generated by RoostGPT for test java-unit-test-bhavya using AI Type Open AI and AI Model gpt-4

package com.lostcities.lostcities.application.service;

import com.lostcities.lostcities.application.dto.GameDto;
import com.lostcities.lostcities.application.dto.MoveDto;
import com.lostcities.lostcities.domain.game.Game;
import com.lostcities.lostcities.domain.game.GameRepository;
import com.lostcities.lostcities.domain.game.Move;
import com.lostcities.lostcities.domain.game.Player;
import com.lostcities.lostcities.domain.game.card.Card;
import com.lostcities.lostcities.domain.user.User;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import java.util.Optional;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.*;

public class GameService_makeMove_3422b773a9_Test {

    @InjectMocks
    GameService gameService;

    @Mock
    GameRepository gameRepository;

    @Mock
    Game game;

    @Mock
    Player player;

    @Mock
    User user;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testMakeMove_success() {
        long gameId = 1L;
        MoveDto moveDto = new MoveDto("discard", "red", "2");

        when(game.getPlayerById(user.getId())).thenReturn(Optional.of(player));
        when(gameRepository.save(any(Game.class))).thenReturn(game);

        GameDto result = gameService.makeMove(gameId, user, moveDto);

        assertEquals(gameId, result.getId());
        verify(game).makeMove(any(Move.class));
        verify(gameRepository).save(any(Game.class));
    }

    @Test
    public void testMakeMove_failure_invalidPlayer() {
        long gameId = 1L;
        MoveDto moveDto = new MoveDto("discard", "red", "2");

        when(game.getPlayerById(user.getId())).thenReturn(Optional.empty());

        assertThrows(RuntimeException.class, () -> gameService.makeMove(gameId, user, moveDto));
    }
}
