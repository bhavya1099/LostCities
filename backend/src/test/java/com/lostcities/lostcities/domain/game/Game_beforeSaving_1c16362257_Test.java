// Test generated by RoostGPT for test java-unit-test-bhavya using AI Type Open AI and AI Model gpt-4

package com.lostcities.lostcities.domain.game;

import com.lostcities.lostcities.domain.user.User;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class Game_beforeSaving_1c16362257_Test {

    private Game game;

    @BeforeEach
    public void setUp() {
        game = new Game();
    }

    @Test
    public void testBeforeSaving_WhenUser1IsNull() {
        Player player1 = new Player(1, "Player1");
        game.setPlayer1(player1);
        game.beforeSaving();

        User user1 = game.getUser1();
        assertNotNull(user1);
        assertEquals(player1.getId(), user1.getId());
        assertEquals(player1.getName(), user1.getName());
    }

    @Test
    public void testBeforeSaving_WhenUser2IsNull() {
        Player player2 = new Player(2, "Player2");
        game.setPlayer2(player2);
        game.beforeSaving();

        User user2 = game.getUser2();
        assertNotNull(user2);
        assertEquals(player2.getId(), user2.getId());
        assertEquals(player2.getName(), user2.getName());
    }

    @Test
    public void testBeforeSaving_WhenBothUsersAreNull() {
        Player player1 = new Player(1, "Player1");
        Player player2 = new Player(2, "Player2");
        game.setPlayer1(player1);
        game.setPlayer2(player2);
        game.beforeSaving();

        User user1 = game.getUser1();
        User user2 = game.getUser2();
        assertNotNull(user1);
        assertNotNull(user2);
        assertEquals(player1.getId(), user1.getId());
        assertEquals(player1.getName(), user1.getName());
        assertEquals(player2.getId(), user2.getId());
        assertEquals(player2.getName(), user2.getName());
    }

    @Test
    public void testBeforeSaving_WhenBothUsersAreNotNull() {
        Player player1 = new Player(1, "Player1");
        Player player2 = new Player(2, "Player2");
        User user1 = new User(3, "User1");
        User user2 = new User(4, "User2");
        game.setPlayer1(player1);
        game.setPlayer2(player2);
        game.setUser1(user1);
        game.setUser2(user2);
        game.beforeSaving();

        assertEquals(user1, game.getUser1());
        assertEquals(user2, game.getUser2());
    }
}
