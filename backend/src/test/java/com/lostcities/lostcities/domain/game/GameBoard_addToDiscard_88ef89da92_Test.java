// Test generated by RoostGPT for test java-unit-test-bhavya using AI Type Open AI and AI Model gpt-4

package com.lostcities.lostcities.domain.game;

import com.lostcities.lostcities.domain.game.card.Card;
import com.lostcities.lostcities.domain.game.card.CardStack;
import com.lostcities.lostcities.domain.game.card.Color;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.HashMap;
import java.util.Map;
import java.util.Optional;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class GameBoard_addToDiscard_88ef89da92_Test {

    @InjectMocks
    private GameBoard gameBoard;

    @Mock
    private Map<Color, CardStack> discardPiles;

    @Mock
    private CardStack cardStack;

    @BeforeEach
    public void setUp() {
        when(discardPiles.get(any(Color.class))).thenReturn(cardStack);
    }

    @Test
    public void testAddToDiscard_Success() {
        Card card = new Card(Color.YELLOW, 5);
        gameBoard.addToDiscard(card);
        verify(discardPiles, times(1)).get(card.getColor());
        verify(cardStack, times(1)).addToTop(card);
    }

    @Test
    public void testAddToDiscard_NullCard() {
        Card card = null;
        Exception exception = assertThrows(NullPointerException.class, () -> gameBoard.addToDiscard(card));
        assertEquals("Card cannot be null", exception.getMessage());
    }

    @Test
    public void testAddToDiscard_NoDiscardPileForColor() {
        when(discardPiles.get(any(Color.class))).thenReturn(null);
        Card card = new Card(Color.YELLOW, 5);
        Exception exception = assertThrows(IllegalArgumentException.class, () -> gameBoard.addToDiscard(card));
        assertEquals("No discard pile exists for color: " + card.getColor(), exception.getMessage());
    }
}
