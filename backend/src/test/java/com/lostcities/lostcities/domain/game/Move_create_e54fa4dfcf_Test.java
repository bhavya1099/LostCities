// Test generated by RoostGPT for test java-unit-test-bhavya using AI Type Open AI and AI Model gpt-4

package com.lostcities.lostcities.domain.game;

import com.lostcities.lostcities.domain.game.card.Card;
import com.lostcities.lostcities.domain.game.card.Color;
import com.lostcities.lostcities.domain.game.exception.EmptyDeckException;
import com.lostcities.lostcities.domain.game.exception.EmptyDiscardException;
import com.lostcities.lostcities.domain.user.User;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

public class Move_create_e54fa4dfcf_Test {

    private Player player;
    private Type type;
    private Card card;

    @BeforeEach
    public void setup() {
        player = new Player(new User("John Doe", "johndoe@example.com", "password"));
        type = Type.DISCARD;
        card = new Card(Color.GREEN, 5);
    }

    @Test
    public void testCreateMove() {
        Move move = Move.create(player, type, card);
        assertNotNull(move);
        assertEquals(player, move.getPlayer());
        assertEquals(type, move.getType());
        assertEquals(card, move.getCard());
    }

    @Test
    public void testCreateMoveWithNullPlayer() {
        Move move = Move.create(null, type, card);
        assertNotNull(move);
        assertEquals(null, move.getPlayer());
        assertEquals(type, move.getType());
        assertEquals(card, move.getCard());
    }

    @Test
    public void testCreateMoveWithNullType() {
        Move move = Move.create(player, null, card);
        assertNotNull(move);
        assertEquals(player, move.getPlayer());
        assertEquals(null, move.getType());
        assertEquals(card, move.getCard());
    }

    @Test
    public void testCreateMoveWithNullCard() {
        Move move = Move.create(player, type, null);
        assertNotNull(move);
        assertEquals(player, move.getPlayer());
        assertEquals(type, move.getType());
        assertEquals(null, move.getCard());
    }
}
