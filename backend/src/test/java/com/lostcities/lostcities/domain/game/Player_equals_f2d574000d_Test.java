// Test generated by RoostGPT for test java-unit-test-bhavya using AI Type Open AI and AI Model gpt-4

package com.lostcities.lostcities.domain.game;

import com.lostcities.lostcities.domain.game.card.Card;
import com.lostcities.lostcities.domain.game.card.CardStack;
import com.lostcities.lostcities.domain.game.card.Color;
import com.lostcities.lostcities.domain.game.exception.CardLowerValueException;
import com.lostcities.lostcities.domain.game.exception.CardNotInHandException;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeEach;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

public class Player_equals_f2d574000d_Test {

    @Mock
    private Player player1, player2, player3;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testEquals_sameObject() {
        Assertions.assertTrue(player1.equals(player1));
    }

    @Test
    public void testEquals_sameId() {
        Mockito.when(player1.getId()).thenReturn(1);
        Mockito.when(player2.getId()).thenReturn(1);
        Assertions.assertTrue(player1.equals(player2));
    }

    @Test
    public void testEquals_differentId() {
        Mockito.when(player1.getId()).thenReturn(1);
        Mockito.when(player3.getId()).thenReturn(2);
        Assertions.assertFalse(player1.equals(player3));
    }

    @Test
    public void testEquals_nullObject() {
        Assertions.assertFalse(player1.equals(null));
    }

    @Test
    public void testEquals_differentClass() {
        Object obj = new Object();
        Assertions.assertFalse(player1.equals(obj));
    }
}
