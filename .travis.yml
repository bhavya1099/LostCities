before_install:
  # Download Code Climate test reporter tool
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter

matrix:
  include:
    # -- Backend -- #
    - language: java
      before_install:
        - cd backend
      jdk: oraclejdk13

      script:
        - ./gradlew build --scan -s
        - ./gradlew jacocoTestReport

      # Gradle Caching
      before_cache:
        - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
      cache:
        directories:
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/

    # -- Frontend -- #
    - language: node_js
      node_js: 12

      install:
        - cd frontend
        - npm install

      script:
        - npm run test
        - npm run test:e2e -- --headless

# Collect and upload test coverage results to Code Climate
after_script:
  - cd $TRAVIS_BUILD_DIR
  # Format coverage
  - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.frontend.json frontend/coverage/lcov.info
  - ./cc-test-reporter format-coverage -t jacoco -o coverage/codeclimate.backend.json backend/build/reports/jacoco/test/jacocoTestReport.xml
    # Sum both coverage parts into coverage/codeclimate.json
  - ./cc-test-reporter sum-coverage coverage/codeclimate.*.json -p 2
    # Upload coverage/codeclimate.json
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then ./cc-test-reporter upload-coverage; fi
