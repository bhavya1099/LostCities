// Test generated by RoostGPT for test java-unit-test-bhavya using AI Type Open AI and AI Model gpt-4

package com.lostcities.lostcities.application.service;

import com.lostcities.lostcities.application.dto.GameDto;
import com.lostcities.lostcities.domain.game.Game;
import com.lostcities.lostcities.domain.game.GameRepository;
import com.lostcities.lostcities.domain.game.Player;
import com.lostcities.lostcities.domain.user.User;
import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import java.util.Random;

import static org.junit.Assert.assertEquals;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;

public class GameService_createGame_0542bcd138_Test {

    @InjectMocks
    private GameService gameService;

    @Mock
    private GameRepository gameRepository;

    @Mock
    private Random seedGenerator;

    @Before
    public void init() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testCreateGameSuccess() {
        User user = new User("1", "testUser");
        Player player = new Player(user.getId(), user.getUsername());
        Game game = Game.create(seedGenerator.nextLong(), player);
        when(gameRepository.save(any(Game.class))).thenReturn(game);

        GameDto result = gameService.createGame(user);

        assertEquals(game.getId(), result.getId());
        assertEquals(game.getSeed(), result.getSeed());
        assertEquals(game.getPlayer(user.getId()).getUsername(), result.getPlayer(user.getId()).getUsername());
    }

    @Test(expected = RuntimeException.class)
    public void testCreateGameFailure() {
        User user = new User("1", "testUser");
        when(gameRepository.save(any(Game.class))).thenThrow(RuntimeException.class);

        gameService.createGame(user);
    }
}
