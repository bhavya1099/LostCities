// Test generated by RoostGPT for test java-unit-test-bhavya using AI Type Open AI and AI Model gpt-4

package com.lostcities.lostcities.domain.game;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

public class Game_postMoveUpdateState_1668a57e6d_Test {
    
    @InjectMocks
    private Game game;

    @Mock
    private Deck deck;
    
    @Mock
    private Move move;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testPostMoveUpdateState_GameNotStarted_AllPlayersReady() {
        when(game.didStart()).thenReturn(false);
        when(game.allPlayersReady()).thenReturn(true);

        game.postMoveUpdateState(move);

        verify(game, times(1)).start();
    }

    @Test
    public void testPostMoveUpdateState_DeckIsEmpty() {
        when(game.didStart()).thenReturn(true);
        when(deck.isEmpty()).thenReturn(true);

        game.postMoveUpdateState(move);

        verify(game, times(1)).gameOver();
    }

    @Test
    public void testPostMoveUpdateState_MoveEndsTurn() {
        when(game.didStart()).thenReturn(true);
        when(deck.isEmpty()).thenReturn(false);
        when(move.doesEndTurn()).thenReturn(true);

        game.postMoveUpdateState(move);

        verify(game, times(1)).advancePlayerTurn();
    }

    @Test
    public void testPostMoveUpdateState_GameNotStarted_PlayersNotReady() {
        when(game.didStart()).thenReturn(false);
        when(game.allPlayersReady()).thenReturn(false);

        game.postMoveUpdateState(move);

        verify(game, times(0)).start();
    }
}
