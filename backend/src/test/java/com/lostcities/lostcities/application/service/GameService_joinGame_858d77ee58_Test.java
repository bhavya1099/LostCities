// Test generated by RoostGPT for test java-unit-test-bhavya using AI Type Open AI and AI Model gpt-4

package com.lostcities.lostcities.application.service;

import com.lostcities.lostcities.application.dto.GameDto;
import com.lostcities.lostcities.domain.game.Game;
import com.lostcities.lostcities.domain.game.GameRepository;
import com.lostcities.lostcities.domain.game.Player;
import com.lostcities.lostcities.domain.user.User;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class GameService_joinGame_858d77ee58_Test {

    @InjectMocks
    private GameService gameService;

    @Mock
    private GameRepository gameRepository;

    private User user;
    private Game game;

    @BeforeEach
    public void setUp() {
        user = new User();
        user.setId(1L);
        user.setUsername("testUser");

        game = new Game();
        game.setId(2L);
    }

    @Test
    public void testJoinGame() {
        when(gameRepository.findById(game.getId())).thenReturn(Optional.of(game));

        GameDto result = gameService.joinGame(game.getId(), user);

        verify(gameRepository, times(1)).save(game);
        assertEquals(game.getId(), result.getGameId());
        assertEquals(user.getUsername(), result.getSecondPlayer().getUsername());
    }

    @Test
    public void testJoinGameWhenGameDoesNotExist() {
        when(gameRepository.findById(game.getId())).thenReturn(Optional.empty());

        assertThrows(GameNotFoundException.class, () -> gameService.joinGame(game.getId(), user));

        verify(gameRepository, times(0)).save(any(Game.class));
    }
}
